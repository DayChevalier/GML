<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Display Properties
//The minimum height of the prefered aspect ratio. 272 is 1080/4
//272*2 = 544 is a multiple of 32. For a 32 bit game, this will create minimal distortion in the view, though not perfect
//idealHeight =480
idealHeight =360;
//The widith will be dynamic to change the view to fit the window/monitor
idealWidth = 0;
//Control resizing options
zoom = 1;
max_zoom = 1;

//For tracking resize options in the menu, best size is determined by finding display's
// aspect ration. This is on by default
bestFit = 1;


//Hold current window data, but can be manipulated for testing
displayWidth=display_get_width();
displayHeight=display_get_height();

//Aspect ratio of current monitor (finding best fit)
//aspectRatio = displayWidth/displayHeight;
///Limit game between 4/3 to 16/9, which ever is closer
//aspectRatio = clamp(aspectRatio,4/3,16/9);

aspectRatio = 16/9;

//Pixel perfect control ( on by default )
pixelPerfect = 1;

//full screen control
fullscreen = 0;

//Ideal width and height determination performed in a callable event so that it can be recalled if player
//   changes their aspect ratio.
event_user(0);


room_goto(room_next(room));


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Center Window View
window_center();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alter full screen
if (window_get_fullscreen()){
    window_set_fullscreen(false);
}else{
    window_set_fullscreen(true);
};
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Generate ideal Window

//This will estimate the cloest possible width by applying the aspect ratio to the prefered height
idealWidth = round(idealHeight*aspectRatio);


//Pixel Perfect Scaling
if (pixelPerfect == 1){
    if ((displayWidth mod idealWidth)!=0){
        var d = round(displayWidth/idealWidth);
        idealWidth = round(displayWidth/d);
    };
    if ((displayHeight mod idealHeight)!=0){
        var d = round(displayHeight/idealHeight);
        idealHeight = round(displayHeight/d);
    };
};

//Check for odd pixel numbers using bitwise operates
if (idealWidth &amp; 1){
    idealWidth++;
}

if (idealHeight &amp; 1){
    idealHeight++;
}

//Calculate Max Zoom without leaving screen bounds (+1 will be near full screen but still windowed)
max_zoom=floor(displayWidth/idealWidth)+1;  


//Checks all existing rooms from sets their view and port to the above estimates ideal size.
for (var i = 1; i&lt;=room_last;i++){
    if(room_exists(i)){
        room_set_view(i,0,true,0,0,idealWidth,idealHeight,0,0,idealWidth,idealHeight,0,0,0,0,-1);
        room_set_view_enabled(i,true);
    }
};

window_set_size(idealWidth*zoom,idealHeight*zoom);
display_set_gui_size(idealWidth,idealHeight);
surface_resize(application_surface,idealWidth*zoom,idealHeight*zoom);
if (instance_exists(obj_camera)){
    with (obj_camera){
        event_user(0);
    };
}else{
    instance_create(x,y, obj_camera);
};                

//Activate alarm to center window
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
